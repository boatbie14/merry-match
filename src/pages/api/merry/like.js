import { requireUser } from '@/middleware/requireUser';
import { getMerryLike, insertMerryLike} from '@/lib/query/merryLike';
import { addLikeCountLog } from '@/lib/query/addLikeCountLog';
import { checkMerryLimit } from '@/lib/query/checkMerryLimit';
// TODO ü©µ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡πÅ‡∏•‡∏∞ ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏û‡∏µ‡πà‡πÇ‡∏ö‡∏ó‡∏™
// TODO üíô‡πÇ‡∏•‡∏à‡∏¥‡∏Å‡∏Å‡∏≤‡∏£ ‡πÅ‡∏à‡πâ‡∏á‡πÉ‡∏´‡πâ client ‡∏£‡∏π‡πâ‡∏ß‡πà‡∏≤ limit ‡πÄ‡∏Å‡∏¥‡∏ô
export default async function handler(req, res) {
  if (req.method !== 'POST') {return res.status(405).json({ error: 'Method Not Allowed' });}
  try {
    const result = await requireUser(req, res);
    if (!result) return;
    const { userId } = result;
    const { toUserId,dateString } = req.body;

    // 1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ like ‡∏ô‡∏µ‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    const { data: existingLike} = await getMerryLike(userId, toUserId);
    if (existingLike) {return res.status(200).json({ message: 'Already liked' });}

    // 2. ‡∏î‡∏∂‡∏á‡∏Ñ‡πà‡∏≤‡∏à‡∏≥‡∏ô‡∏ß‡∏ô like ‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ ‡πÅ‡∏•‡∏∞ limit
    const {data} = await checkMerryLimit(userId, dateString);
    const {count,merry_per_day,log_date} = data
    if (count >= merry_per_day) {return res.status(403).json({ message: 'Like limit reached for today' });}

    // 3. ‡πÄ‡∏û‡∏¥‡πà‡∏° log ‡∏Å‡∏≤‡∏£‡∏Å‡∏î like ‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ
    const logResult = await addLikeCountLog(userId,count,log_date);
    if (!logResult.success) {return res.status(500).json({ error: 'Failed to log like count' });}

    // 4. ‡πÄ‡∏û‡∏¥‡πà‡∏° like ‡∏•‡∏á‡πÉ‡∏ô merry_list
    const { error } = await insertMerryLike(userId, toUserId);
    if (error) {
      return res.status(500).json({ error: error.message });
    }

    return res.status(200).json({ message: 'User liked successfully' });
  } catch (e) {
    console.error('Error in handler:', e);
    return res.status(500).json({ error: 'Internal Server Error' });
  }
}